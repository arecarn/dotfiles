#!/bin/sh

print_usage() {
    echo "\
usage: git rename-author [-f|--force] <new-name> <new-email> [options]

    -r, --range <commit-range>     commit range to limit rename to e.g.
                                   \"HEAD~2..HEAD\" uses the last two commits
    -n, --old-name <old-name>      old author name to limit rename to
    -e, --old-email <old-email>    old author email to limit rename to
"
}


other_args=''
handle_other_argument(){
    # save all the non-named arguments so they can be reinserted back into the
    # positional parameters at the end of the argument parsing
    other_args="${other_args} '$*'"
}

# default values
force=''
range=''
use_config=0
old_email=''
old_name=''

while [ "$#" -gt 0 ]; do
    case "$1" in
        -f|--force)
            force='-f';;

        -c|--use-config)
            use_config="$2";
            shift 1;;

        -n|--old-name)
            old_name="$2";
            shift 1;;

        -e|--old-email)
            old_email="$2";
            shift 1;;

        -r|--range)
            range="$2";
            shift 1;;

        -*)
            echo "unknown option: $1" >&2;
            exit 1;;

        *)
            handle_other_argument "$1";
    esac
    shift 1
done

# reinsert non-named arguments back into positional parameters ($1 $2 ..)
eval set -- "${other_args}"

new_name="$1"
new_email="$2"
all_authors=0

if [ -z "${new_email}" ] || [ -z "${new_name}" ]; then
    # not enough arguments
    print_usage
    exit 1
fi

if [ -z "${old_email}" ] && [ -z "${old_name}" ]; then
    all_authors=1
fi


export old_email old_name new_email new_name all_authors
filter='
    set_email() {
        if [ -n "$new_email" ]; then
            GIT_AUTHOR_EMAIL="$new_email"
            export GIT_AUTHOR_EMAIL

            GIT_COMMITTER_EMAIL="$new_email"
            export GIT_COMMITTER_EMAIL

        else
            unset GIT_AUTHOR_EMAIL
            unset GIT_COMMITER_EMAIL
        fi
    }

    set_name() {
        if [ -n "$new_name" ]; then
            GIT_AUTHOR_NAME="$new_name"
            export GIT_AUTHOR_NAME

            GIT_COMMITTER_NAME="$new_name"
            export GIT_COMMITTER_NAME
        else
            unset GIT_AUTHOR_NAME
            unset GIT_COMMITTER_NAME
        fi
    }

    if ([ "GIT_AUTHOR_NAME" = "$old_name" ] || [ "GIT_COMMITTER_NAME" = "$old_name" ]) ||
        ([ "$GIT_AUTHOR_EMAIL" = "$old_email" ] || [ "$GIT_COMMITTER_EMAIL" = "$old_email" ]) ||
        [ "$all_authors" -eq 1 ]; then

        set_name
        set_email
    fi
'

git filter-branch "${force}" --env-filter "${filter}" --tag-name-filter cat \
    -- "${range}" --branches --tags

# -                                                                        {{{
##############################################################################

###########################################################################}}}
# KEY MAPPINGS                                                             {{{
##############################################################################
# set prefix to CTRL-space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# vi mode
set-window-option -g mode-keys vi
# make pasting and entering copy mode more vim like
bind-key Escape copy-mode
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy V rectangle-toggle
bind-key -t vi-copy y copy-selection
bind-key -t vi-copy | start-of-line

bind-key p paste-buffer
bind-key P choose-buffer

bind-key | last-window
bind-key -r [ previous-window
bind-key -r ] next-window
bind-key -r ( switch-client -p
bind-key -r ) switch-client -n

bind-key s source-file ~/.tmux.conf
bind-key S refresh-client

unbind ,
bind-key n  command-prompt -I "\#W" "rename-window '%%'"
bind-key N command-prompt -I "\#S"  "rename-session '%%'"

bind-key w display-panes
bind-key W choose-tree -u

bind-key x kill-pane
bind-key X kill-window
bind-key q confirm-before kill-session
bind-key Q confirm-before kill-server

# pane navigation kinda like vim window navigation
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# use f-keys to resize sorta like hjkl
bind-key -r F9 resize-pane -L 5
bind-key -r F10 resize-pane -D 5
bind-key -r F11 resize-pane -U 5
bind-key -r F12 resize-pane -R 5

# easy way to swap windows
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# Set the current working directory based on the current pane's current
# working directory (if set; if not, use the pane's starting directory) when
# creating new windows and splits.
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'
bind-key C command-prompt "new-session -A -c '#{pane_current_path}' -s '%%'"

# move a pane to a different window
bind-key m choose-window "move-pane -t '%%'"
# move a window to a different session
bind-key M choose-session "move-window -t '%%':"

bind-key "'" select-pane -m
bind-key '"' select-pane -M

###########################################################################}}}
# GENERAL BEHAVIOR                                                         {{{
##############################################################################
# allow 256 colors
set -g default-terminal screen-256color

# switch to another session when one is destroyed
set -g detach-on-destroy off

# don't rename windows automatically
set-option -g allow-rename off

# Automatically renumber windows as they are opened and closed
set-option -g renumber-windows on

# make scrollback bigger that default of 2000
set-option -g history-limit 50000

# enable mouse usage >=v2.1
set-option -g -q mouse on

# enable mouse usage <v2.1
set-option -g -q mode-mouse on
set-option -g -q mouse-select-pane on
set-option -g -q mouse-select-window on
set-option -g -q mouse-resize-pane on

# set window and pane index (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# only resize if smaller and bigger client are looking at the same window
setw -g aggressive-resize on

set -sg escape-time 0
###########################################################################}}}
# PLUGINS                                                                  {{{
##############################################################################

# the vim plugin tmuxline.vim generates this status line configuration
if-shell "test -f ~/.cache/tmux/statusline.conf" \
    "source-file ~/.cache/tmux/statusline.conf"

plugin_path='~/.cache/tmux/plugin'
tpm_path="${plugin_path}/tpm"

set-environment -g TMUX_PLUGIN_MANAGER_PATH "${plugin_path}"

# install tpm if it isn't there already
if "test ! -d ${tpm_path}" \
   "run 'git clone https://github.com/tmux-plugins/tpm '${tpm_path}"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'Morantron/tmux-fingers'

if-shell "test -d ${plugin_path}/tmux-fingers" \
    "set -g @fingers-compact-hints 0"

# set -g @plugin 'tmux-plugins/tmux-sensible'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "${tpm_path}/tpm"

###########################################################################}}}
# -                                                                        {{{
##############################################################################
# vim: textwidth=78
# vim: foldmethod=marker
###########################################################################}}}

# -                                                                        {{{
##############################################################################
config_dir='~/.config/tmux'
cache_dir='~/.cache/tmux'

###########################################################################}}}
# KEY MAPPINGS                                                             {{{
##############################################################################
# set prefix to CTRL-space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# vi mode
set-window-option -g mode-keys vi
# make pasting and entering copy mode more vim like
bind-key Escape copy-mode

run-shell "${config_dir}/version_dependent_settings.sh"

bind-key p paste-buffer
bind-key P choose-buffer

bind-key | last-window
bind-key -r [ previous-window
bind-key -r ] next-window
bind-key -r ( switch-client -p
bind-key -r ) switch-client -n

bind-key s source-file ~/.tmux.conf
bind-key S refresh-client

unbind ,
bind-key n  command-prompt -I "\#W" "rename-window '%%'"
bind-key N command-prompt -I "\#S"  "rename-session '%%'"

bind-key w display-panes
# bind-key W choose-tree
bind-key W choose-tree

bind-key x kill-pane
bind-key X kill-window
bind-key q confirm-before kill-session
bind-key Q confirm-before kill-server

# pane navigation kinda like vim window navigation
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# use f-keys to resize sorta like hjkl
bind-key -r LEFT resize-pane -L
bind-key -r DOWN resize-pane -D
bind-key -r UP resize-pane -U
bind-key -r RIGHT resize-pane -R

# cycle through zoomed in panes
bind-key -r Z select-pane -t .+1 \;  resize-pane -Z

# easy way to swap windows
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# Set the current working directory based on the current pane's current
# working directory (if set; if not, use the pane's starting directory) when
# creating new windows and splits.
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'
bind-key C command-prompt "new-session -A -c '#{pane_current_path}' -s '%%'"

# move a pane to a different window
bind-key m choose-window "move-pane -t '%%'"
# move a window to a different session
bind-key M choose-session "move-window -t '%%':"

bind-key "'" select-pane -m
bind-key '"' select-pane -M

###########################################################################}}}
# GENERAL BEHAVIOR                                                         {{{
##############################################################################
# allow 256 colors
set -g default-terminal screen-256color

# switch to another session when one is destroyed
set -g detach-on-destroy off

# don't rename windows automatically
set-option -g allow-rename off

# Automatically renumber windows as they are opened and closed
set-option -g renumber-windows on

# make scrollback bigger that default of 2000
set-option -g history-limit 50000

# enable mouse usage >=v2.1
set-option -g -q mouse on

# enable mouse usage <v2.1
set-option -g -q mode-mouse on
set-option -g -q mouse-select-pane on
set-option -g -q mouse-select-window on
set-option -g -q mouse-resize-pane on

# set window and pane index (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# only resize if smaller and bigger client are looking at the same window
setw -g aggressive-resize on

set -sg escape-time 0

# Fix ssh agent when tmux is detached
# See ~/.ssh/rc for socket linking
set-environment -g SSH_AUTH_SOCK ${HOME}/.ssh/ssh_auth_sock_$(hostname)
###########################################################################}}}
# PLUGINS                                                                  {{{
##############################################################################

# the vim plugin tmuxline.vim generates this status line configuration
if-shell "test -f ${cache_dir}/statusline.conf" \
    "source-file ${cache_dir}/statusline.conf"

plugin_dir="${cache_dir}/plugin"
tpm_repo_dir="${plugin_dir}/tpm"

set-environment -g TMUX_PLUGIN_MANAGER_PATH "${plugin_dir}"

# install tpm if it isn't there already
if "test ! -d ${tpm_repo_dir}" \
   "run-shell 'git clone https://github.com/tmux-plugins/tpm '${tpm_repo_dir}"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'

# Disabling tmux-fingers because it's causing Tmux to crash on open
# set -g @plugin 'Morantron/tmux-fingers'
# if-shell "test -d ${plugin_dir}/tmux-fingers" \
#     "set -g @fingers-compact-hints 0"

# set -g @plugin 'tmux-plugins/tmux-sensible'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run-shell "${tpm_repo_dir}/tpm"

###########################################################################}}}
# -                                                                        {{{
##############################################################################
# vim: textwidth=78
# vim: foldmethod=marker
###########################################################################}}}
